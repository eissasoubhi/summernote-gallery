{"version":3,"file":"module/index.js","mappings":"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","sources":["webpack://module/webpack/universalModuleDefinition","webpack://module/webpack/bootstrap","webpack://module/webpack/runtime/define property getters","webpack://module/webpack/runtime/hasOwnProperty shorthand","webpack://module/webpack/runtime/make namespace object","webpack://module/./node_modules/snb-components/src/EventManager.ts","webpack://module/./src/Module/GalleryModal.ts","webpack://module/./node_modules/snb-components/src/Module/DataManager.ts","webpack://module/./src/Module/SummernoteGallery.ts","webpack://module/./src/Module/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"module\"] = factory();\n\telse\n\t\troot[\"module\"] = factory();\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import EventsAwareInterface from './Module/Interfaces/EventsAwareInterface'\n\nexport default class EventManager implements EventsAwareInterface {\n    private eventsQueue: any;\n\n    constructor() {\n        // events store\n        this.eventsQueue = {};\n    }\n\n    // Register an event\n    on(eventName: string, eventHandler: (data: object) => void): EventsAwareInterface {\n        if (! Array.isArray(this.eventsQueue[eventName]) ) {\n            this.eventsQueue[eventName] = [];\n        }\n\n        this.eventsQueue[eventName].push(eventHandler);\n\n        return this;\n    }\n\n    // Fire an event\n    trigger(eventName: string, data: object = {}) {\n        let events = this.eventsQueue[eventName] || [];\n\n        for (let i = 0; i < events.length; i++) {\n            events[i].apply(null, [data]);\n        }\n\n        return this;\n    }\n\n    clearAll() {\n        this.eventsQueue = {};\n\n        return this;\n    }\n}","import EventManager from 'snb-components/src/EventManager'\n\nexport default class GalleryModal {\n    private $css: JQuery;\n    private readonly select_class: string;\n    private event: EventManager;\n    private template: string;\n    private readonly $modal: any;\n    private options: any;\n\n    constructor(options: any) {\n        this.options = $.extend({\n            // load more data on modal scroll\n            loadOnScroll: false,\n\n            // modal max height\n            maxHeight: 500,\n\n            // modal title\n            title: 'summernote image gallery',\n\n            // close button text\n            close_text: 'Close',\n\n            // save button text\n            ok_text: 'Add',\n\n            // select all button text\n            selectAll_text: 'Select all',\n\n            // deselect all button text\n            deselectAll_text: 'Deselect all',\n\n            // message error to display when no image is selected\n            noImageSelected_msg: 'One image at least must be selected.'\n        }, options);\n\n        this.event = new EventManager();\n\n        this.template = this.getModalTemplate();\n        this.$modal = $(this.template).hide();\n\n        // class to add to image when selected\n        this.select_class = \"selected-img\";\n\n        this.addStyleToDom();\n        this.setOptions();\n\n        this.attachEvents();\n    }\n\n    setOptions() {\n        this.$modal.find('.modal-body').css('max-height', this.options.maxHeight);\n        this.$modal.find('.modal-title').html(this.options.title);\n        this.$modal.find('#close').html(this.options.close_text);\n        this.$modal.find('#save').html(this.options.ok_text);\n        this.$modal.find('#select-all').html(this.options.selectAll_text);\n        this.$modal.find('#deselect-all').html(this.options.deselectAll_text);\n    }\n\n    // append images to the modal with data object\n    addImages(data: any, page: any) {\n\n        var $page_images = this.createImages(data, page);\n        var $images_list = this.$modal.find('.images-list');\n\n        if ($images_list.find('.img-item').length) {\n            this.$modal.find('.images-list').append($page_images);\n        } else {\n            this.$modal.find('.images-list').html($page_images);\n        }\n    }\n\n    // generate image elements from data object\n    createImages(data: any, page: any) {\n        var _this = this;\n        let content = []\n\n        for (var i = 0; i < data.length; i++) {\n\n            var $image = $('<img class=\"img-thumbnail sng-image\" title=\"'+ data[i].title +'\" data-page=\"' + page + '\"/>');\n\n            $image.get(0).onload = function() {\n                $(this).siblings('.loading').hide()\n                $(this).click(function(event) {\n                    $(this).toggleClass(_this.select_class);\n                });\n            }\n\n            $image.attr('src', data[i].src);\n\n            var $item = $('<div class=\"col-md-2 mb-4 img-item\">'\n                            +'<i class=\"fa fa-check\"></i>'\n                            +'<span class=\"loading\">'\n                                +'<i class=\"fa fa-spinner fa-pulse fa-3x fa-fw\"></i>'\n                            +'</span>'\n                        +'</div>');\n\n            $item.prepend($image);\n            content.push($item)\n        }\n\n        return content;\n    }\n\n    showError(message_text: any, permanent: any = false) {\n        var $message = this.$modal.find('.message');\n\n        $message.html('<span class=\"alert alert-danger\">' + message_text + '</span>');\n\n        if (!permanent) {\n            setTimeout(function () {\n                $message.html('');\n            }, 5000);\n        }\n    }\n\n    showLoading () {\n        this.$modal.find('.modal-footer .loading').show();\n    }\n\n    hideLoading () {\n        this.$modal.find('.modal-footer .loading').hide();\n    }\n\n    attachEvents() {\n        var _this = this;\n        var $modal = this.$modal;\n        var $modal_body = $modal.find('.modal-body');\n\n        $modal.find(\"button#save\").click(function(event: any) {\n            var $selected_img = $modal.find('.img-item img.' + _this.select_class);\n\n            if (! $selected_img.length) {\n                _this.showError(_this.options.noImageSelected_msg);\n                return;\n            }\n\n            $modal.modal('hide')\n\n            _this.event.trigger('beforeSave', [_this]);\n\n            $selected_img.each(function(index: any, el: any) {\n                _this.event.trigger('save', [_this, $(this)]);\n\n                $(this).removeClass(_this.select_class);\n            });\n\n            _this.event.trigger('afterSave', [this]);\n        });\n\n        $modal.on('hidden.bs.modal', function () {\n            _this.event.trigger('close')\n        })\n\n        $modal.find(\"button#select-all\").click(function(event: any) {\n            $modal.find('img').addClass(_this.select_class);\n        });\n\n        $modal.find(\"button#deselect-all\").click(function(event: any) {\n            $modal.find('img').removeClass(_this.select_class);\n        });\n\n        $modal_body.scroll(function() {\n            var $images_list = $modal.find('.images-list');\n            var is_near_bottom = $modal_body.scrollTop() + $modal_body.height() >= $images_list.height() - 100;\n\n            if (is_near_bottom) {\n                _this.event.trigger('scrollBottom', [_this]);\n            }\n        });\n    }\n\n    open() {\n        this.$modal.modal();\n    }\n\n    clearContent() {\n        // Reset the initial html\n        this.$modal.find('.images-list').html('');\n    }\n\n    // whether the images' container has enough content to show the vertical scroll\n    imagesContainerHasScroll() {\n        var $images_container = this.$modal.find('.modal-body');\n        var $images_list = $images_container.find('.images-list');\n\n        return parseInt($images_list.height()) > parseInt($images_container.height());\n    }\n\n    getModalTemplate() {\n\n        var bootsrap_version = parseInt(($ as any).fn.modal.Constructor.VERSION);\n        var header_content = [\n            '<button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>',\n            '<h4 class=\"modal-title\">[gallery title]</h4>'\n        ];\n\n        var modal_html = ''+\n            '<div class=\"modal summernote-gallery fade\" tabindex=\"-1\" role=\"dialog\">'\n                + '<div class=\"modal-lg modal-dialog \">'\n                    + '<div class=\"modal-content\">'\n                        + '<div class=\"modal-header\">'\n                            + (bootsrap_version == 3 ? header_content.join('') : header_content.reverse().join(''))\n                        + '</div>'\n                        + '<div class=\"modal-body\">'\n                            + '<div class=\"row images-list\">'\n                            + '</div>'\n                        + '</div>'\n                        + '<div class=\"modal-footer\">'\n                            + '<span style=\"display: none;position: absolute;left: 10px;bottom: 10px;\" class=\"loading\" >'\n                                + '<i class=\"fa fa-spinner fa-pulse fa-3x fa-fw\"></i>'\n                            + '</span >'\n                            + '<span style=\"display: inline-block; margin-right: 50px;\">'\n                                + '<button type=\"button\" id=\"deselect-all\" class=\"btn btn-default\">[Deselect-all]</button>'\n                                + '<button type=\"button\" id=\"select-all\" class=\"btn btn-default\">[select-all]</button>'\n                            + '</span >'\n                            + '<button type=\"button\" id=\"close\" class=\"btn btn-default\" data-dismiss=\"modal\">[Close]</button>'\n                            + '<button type=\"button\" id=\"save\" class=\"btn btn-primary\">[Add]</button>'\n                            + '<span class=\"message\" ></span >'\n                        + '</div>'\n                    + '</div>'\n                + '</div>'\n            + '</div>';\n\n        return modal_html;\n    }\n\n    addStyleToDom() {\n        this.$css = $('<style>'\n                        +'.img-item{'\n                            +'position : relative;'\n                        +'}'\n                        +'.img-item .fa-check{'\n                            +'position : absolute;'\n                            +'top : -10px;'\n                            +'right : 5px;'\n                            +'font-size: 30px;'\n                            +'color: #337AB7;'\n                        +'}'\n                        +'.img-item .sng-image{'\n                            /*+'min-height : 119.66px;'*/\n                        +'}'\n                        +'.img-item .loading{'\n                            +'position: absolute;'\n                            +'margin: auto;'\n                            +'top: -20px;'\n                            +'bottom: 0;'\n                            +'display: block;'\n                            +'left: 0;'\n                            +'right: 0;'\n                            +'width: 60px;'\n                            +'height: 42px;'\n                            +'text-align: center;'\n                        +'}'\n                        +'.modal.summernote-gallery .message{'\n                            +'display: block;'\n                            +'padding: 30px 0 20px 0;'\n                        +'}'\n                        +'.modal.summernote-gallery .message:empty{'\n                            +'display: block;'\n                            +'padding: 0px!important;'\n                        +'}'\n                        +'.modal.summernote-gallery .modal-body{'\n                            +'overflow: scroll;'\n                        +'}'\n                        +'.img-item .fa-check{'\n                            +'display : none;'\n                        +'}'\n                        +'.img-item .'+ this.select_class +' + .fa-check{'\n                            +'display : block;'\n                        +'}'\n                        +'.'+ this.select_class +'{'\n                            +'background-color: #5CB85C;'\n                        +'}'\n                    +'</style>');\n        this.$css.appendTo('body');\n    }\n}","import EventManager from '../EventManager'\nimport DataManagerOptionsInterface from \"./Interfaces/DataManagerOptionsInterface\";\n\nexport default class DataManager {\n    private fetch_type?: string;\n    private options: DataManagerOptionsInterface;\n    private current_page: number;\n    private is_fetching_locked: boolean;\n    private event: EventManager;\n    private fetch_url: string;\n\n    constructor(options: DataManagerOptionsInterface) {\n        this.options = {\n            ...{\n                // full http url for fetching data\n                url: '',\n\n                // array of objects with 'src' and 'title' keys\n                data: [],\n\n                // the key name that holds the data array\n                responseDataKey: 'data',\n\n                // the key name that holds the next page link\n                nextPageKey: 'links.next',\n            }, ...options\n        }\n\n        this.init();\n    }\n\n    init() {\n        this.current_page = 0;\n        this.is_fetching_locked = false;\n        this.event = new EventManager();\n        this.fetch_url = this.options.url;\n        this.fetch_type = this.options?.data?.length ? 'data' : (this.fetch_url ? 'url' : '');\n    }\n\n    // stop data fetching if neither next page link nor data were found\n    setNextFetch(response: any) {\n        if (response.next_link && response.data.length) {\n            this.fetch_url = response.next_link;\n        } else {\n            this.lockFetching();\n        }\n    }\n\n    lockFetching() {\n        this.is_fetching_locked = true;\n    }\n\n    unlockFetching() {\n        this.is_fetching_locked = false;\n    }\n\n    // get a key from object with dot notation, example: data.key.subkey.\n    getObjectKeyByString(object: any, dotted_key: string, default_val?: any) {\n        const value = dotted_key.split('.').reduce(function (item: any, i: any) {\n            return item ? item[i] : {};\n        }, object);\n\n        if (typeof default_val == 'undefined') {\n            default_val = value;\n        }\n\n        return value && !$.isEmptyObject(value) ? value : default_val;\n    }\n\n    parseResponse(response: any) {\n\n        return {\n            data: this.getObjectKeyByString(response, this.options.responseDataKey, []),\n            next_link: this.getObjectKeyByString(response, this.options.nextPageKey, null)\n        };\n    }\n\n    fetchData() {\n        const _this = this;\n\n        if (this.fetch_type == 'data') {\n\n            this.event.trigger('beforeFetch');\n            this.event.trigger('fetch', [_this.options.data]);\n            this.event.trigger('afterFetch');\n\n        } else if (this.fetch_type == 'url') {\n\n            // Prevent simultaneous requests.\n            // Because we need to get the next page link from each request,\n            // they must be synchronous.\n            if (this.is_fetching_locked) return;\n\n            const current_link = _this.fetch_url;\n\n            this.event.trigger('beforeFetch');\n\n            this.lockFetching();\n\n            $.ajax({\n                url: current_link,\n                beforeSend:function(xhr: any){\n                    // set the request link to get it afterwards in the response\n                    xhr.request_link = current_link;\n                },\n            })\n            .always(function () {\n                // this is the first callback to be called when the request finises\n                _this.unlockFetching();\n            })\n            .done(function(response: any, status_text: string, xhr: any){\n                const parsed_response = _this.parseResponse(response);\n                _this.current_page++;\n\n                //\n                _this.setNextFetch(parsed_response);\n                console.log('parsed_response', parsed_response)\n                _this.event.trigger(\n                    'fetch', \n                    [parsed_response.data,\n                    _this.current_page,\n                    xhr.request_link,\n                    parsed_response.next_link]\n                );\n            })\n            .fail(function() {\n                _this.event.trigger('error', [\"problem loading from \" + current_link]);\n            })\n            .always(function () {\n                _this.event.trigger('afterFetch');\n            });\n\n        } else {\n            _this.event.trigger('error', [\"options 'data' or 'url' must be set\"]);\n        }\n    }\n\n    fetchNext() {\n        if (this.fetch_type == 'url') {\n            this.fetchData();\n        }\n    }\n}\n","import GalleryModal from './GalleryModal'\nimport DataManager from 'snb-components/src/Module/DataManager'\n\nexport default class SummernoteGallery {\n    private options: any;\n    private plugin_default_options: {};\n    private editor: any;\n    private editable: any;\n    private context: any;\n    private plugin_options: any;\n    private modal: any;\n    private data_manager: any;\n    constructor(options: any) {\n        this.options = $.extend({\n            name: 'summernoteGallery',\n            buttonLabel: '<i class=\"fa fa-file-image-o\"></i> SN Gallery',\n            tooltip: 'summernote gallery'\n        }, options);\n\n        this.plugin_default_options = {}\n    }\n\n    // set the focus to the last focused element in the editor\n    recoverEditorFocus() {\n        var last_focused_el = $(this.editor).data('last_focused_element');\n        if(typeof last_focused_el !== \"undefined\") {\n            var editor = this.editable;\n            var range = document.createRange();\n            var sel = window.getSelection();\n            var cursor_position =  last_focused_el.length;\n\n            range.setStart(last_focused_el, cursor_position);\n            range.collapse(true);\n            sel.removeAllRanges();\n            sel.addRange(range);\n            editor.focus();\n        }\n    }\n\n    saveLastFocusedElement() {\n        var focused_element: any = window.getSelection().focusNode;\n        var parent = $(this.editable).get(0);\n        if ($.contains(parent, focused_element)) {\n            $(this.editor).data('last_focused_element', focused_element)\n        }\n    }\n\n    attachEditorEvents() {\n        var _this = this;\n\n        $(this.editable).on('keypress, mousemove', function() {\n            _this.saveLastFocusedElement();\n        })\n\n        $(this.editable).on('click', 'summernote-gallery-brick .delete', function () {\n            // delete brick\n        })\n\n        $(this.editable).on('click', 'summernote-gallery-brick .edit', function () {\n            let $brick = $(this).parents('summernote-gallery-brick');\n            let data = $brick.data('brick'); // json\n\n            _this.modal.open(data);\n        })\n    }\n\n    initGallery(context: any) {\n        this.context = context;\n        this.editor = this.context.layoutInfo.note;\n        this.editable = this.context.layoutInfo.editable;\n        this.plugin_options = $.extend(\n            this.plugin_default_options,\n            this.context.options[this.options.name] || {}\n        )\n\n        this.modal = new GalleryModal(this.plugin_options.modal);\n        this.data_manager = new DataManager(this.plugin_options.source);\n\n        this.attachModalEvents();\n        this.attachEditorEvents();\n    }\n\n    attachModalEvents() {\n        var _this = this;\n\n        this.modal.event.on('beforeSave', function (gallery_modal: any) {\n            _this.recoverEditorFocus();\n        });\n\n        this.modal.event.on('save', function (gallery_modal: any, $image: any) {\n            // add selected images to summernote editor\n            _this.context.invoke(\n                'editor.pasteHTML',\n                '<img src=\"' + $image.attr('src') + '\" alt=\"' + ($image.attr('alt') || \"\") + '\" />'\n            );\n        });\n\n        this.modal.event.on('scrollBottom', function (gallery_modal: any) {\n            if (_this.modal.options.loadOnScroll) {\n                _this.data_manager.fetchNext();\n            }\n        });\n\n        this.modal.event.on('close', function (gallery_modal: any) {\n            _this.data_manager.init();\n            _this.modal.clearContent();\n        });\n    }\n\n    createButton() {\n        var _this = this;\n\n        var button = ($ as any).summernote.ui.button({\n            className: 'w-100',\n            contents: this.options.buttonLabel,\n            tooltip: this.options.tooltip,\n            click: function() {\n                _this.openGallery();\n            }\n        });\n\n        // create jQuery object from button instance.\n        return button.render();\n    }\n\n    attachDataEvents() {\n        var _this = this;\n\n        this.data_manager.event\n        .on('beforeFetch', function () {\n            _this.modal.showLoading();\n        })\n        .on('fetch', function (data: any, page: any, link: any) {\n            console.log('data', data)\n            _this.modal.addImages(data, page);\n\n            setTimeout(function () {\n                if (_this.modal.options.loadOnScroll && !_this.modal.imagesContainerHasScroll()) {\n                    // The loadOnScroll won't work if the images' container doesn't have the scroll displayed,\n                    // so we need to keep loading the images until the scroll shows.\n                    _this.data_manager.fetchNext();\n                }\n            }, 2000)\n        })\n        .on('afterFetch', function () {\n            _this.modal.hideLoading();\n        })\n        .on('error', function (error: any) {\n            _this.modal.showError(error, true);\n        });\n    }\n\n    openGallery() {\n        this.attachDataEvents();\n        this.data_manager.fetchData();\n        this.modal.open();\n    }\n}","import SummernoteGallery from './SummernoteGallery'\n\nexport default class GalleryPlugin {\n    protected summernote_gallery: any\n    constructor(options: any) {\n        this.summernote_gallery = new SummernoteGallery(options);\n    }\n\n    getPlugin() {\n        let plugin = {};\n        let _this = this;\n        let options = this.summernote_gallery.options\n\n        // @ts-ignore\n        plugin[options.name] = function(context) {\n\n            let sgOptions = context.options[options.name] || {}\n            let buttonLabel = sgOptions.buttonLabel || _this.summernote_gallery.options.buttonLabel\n\n            _this.summernote_gallery.options.buttonLabel = buttonLabel\n\n            // add gallery button\n            context.memo('button.' + options.name, _this.createButton());\n\n            this.events = {\n                'summernote.keyup': function(we: any, e: any)\n                {\n                    _this.summernote_gallery.saveLastFocusedElement();\n                }\n            };\n\n            this.initialize = function() {\n                _this.summernote_gallery.initGallery(context);\n            };\n        }\n\n        return plugin;\n    }\n\n    createButton() {\n        return this.summernote_gallery.createButton();\n    }\n}"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","this","eventsQueue","on","eventName","eventHandler","Array","isArray","push","trigger","data","events","i","length","apply","clearAll","options","$","extend","loadOnScroll","maxHeight","title","close_text","ok_text","selectAll_text","deselectAll_text","noImageSelected_msg","event","template","getModalTemplate","$modal","hide","select_class","addStyleToDom","setOptions","attachEvents","find","css","html","addImages","page","$page_images","createImages","append","_this","content","$image","onload","siblings","click","toggleClass","attr","src","$item","prepend","showError","message_text","permanent","$message","setTimeout","showLoading","show","hideLoading","$modal_body","$selected_img","modal","each","index","el","removeClass","addClass","scroll","$images_list","scrollTop","height","open","clearContent","imagesContainerHasScroll","$images_container","parseInt","header_content","fn","Constructor","VERSION","join","reverse","$css","appendTo","url","responseDataKey","nextPageKey","init","current_page","is_fetching_locked","fetch_url","fetch_type","setNextFetch","response","next_link","lockFetching","unlockFetching","getObjectKeyByString","object","dotted_key","default_val","split","reduce","item","isEmptyObject","parseResponse","fetchData","ajax","beforeSend","xhr","request_link","always","done","status_text","parsed_response","console","log","fail","fetchNext","name","buttonLabel","tooltip","plugin_default_options","recoverEditorFocus","last_focused_el","editor","editable","range","document","createRange","sel","window","getSelection","cursor_position","setStart","collapse","removeAllRanges","addRange","focus","saveLastFocusedElement","focused_element","focusNode","parent","contains","attachEditorEvents","parents","initGallery","context","layoutInfo","note","plugin_options","data_manager","source","attachModalEvents","gallery_modal","invoke","createButton","summernote","ui","button","className","contents","openGallery","render","attachDataEvents","link","error","summernote_gallery","getPlugin","plugin","memo","we","e","initialize"],"sourceRoot":""}