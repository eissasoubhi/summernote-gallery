/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "dist/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/Module/DataManager.js":
/*!***********************************!*\
  !*** ./src/Module/DataManager.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return DataManager; });
/* harmony import */ var _EventManager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EventManager */ "./src/Module/EventManager.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }



var DataManager = /*#__PURE__*/function () {
  function DataManager(options) {
    _classCallCheck(this, DataManager);

    this.options = $.extend({
      // full http url for fetching data
      url: null,
      // array of objects with 'src' and 'title' keys
      data: [],
      // the key name that holds the data array
      responseDataKey: 'data',
      // the key name that holds the next page link
      nextPageKey: 'links.next'
    }, options);
    this.init();
  }

  _createClass(DataManager, [{
    key: "init",
    value: function init(response) {
      this.current_page = 0;
      this.is_fetching_locked = false;
      this.event = new _EventManager__WEBPACK_IMPORTED_MODULE_0__["default"]();
      this.fetch_url = this.options.url;
      this.fetch_type = this.options.data.length ? 'data' : this.fetch_url ? 'url' : null;
    } // stop data fetching if neither next page link nor data were found

  }, {
    key: "setNextFetch",
    value: function setNextFetch(response) {
      if (response.next_link && response.data.length) {
        this.fetch_url = response.next_link;
      } else {
        this.lockFetching();
      }
    }
  }, {
    key: "lockFetching",
    value: function lockFetching() {
      this.is_fetching_locked = true;
    }
  }, {
    key: "unlockFetching",
    value: function unlockFetching() {
      this.is_fetching_locked = false;
    } // get a key from object with dot notation, example: data.key.subkey.

  }, {
    key: "getObjectKeyByString",
    value: function getObjectKeyByString(object, dotted_key, default_val) {
      var value = dotted_key.split('.').reduce(function (item, i) {
        return item ? item[i] : {};
      }, object);

      if (typeof default_val == 'undefined') {
        default_val = value;
      }

      return value && !$.isEmptyObject(value) ? value : default_val;
    }
  }, {
    key: "parseResponse",
    value: function parseResponse(response) {
      return {
        data: this.getObjectKeyByString(response, this.options.responseDataKey, []),
        next_link: this.getObjectKeyByString(response, this.options.nextPageKey, null)
      };
    }
  }, {
    key: "fetchData",
    value: function fetchData() {
      var _this = this;

      if (this.fetch_type == 'data') {
        this.event.trigger('beforeFetch');
        this.event.trigger('fetch', [_this.options.data]);
        this.event.trigger('afterFetch');
      } else if (this.fetch_type == 'url') {
        // Prevent simultaneous requests.
        // Because we need to get the next page link from each request,
        // they must be synchronous.
        if (this.is_fetching_locked) return;
        var current_link = _this.fetch_url;
        this.event.trigger('beforeFetch');
        this.lockFetching();
        $.ajax({
          url: current_link,
          beforeSend: function beforeSend(xhr) {
            // set the request link to get it afterwards in the response
            xhr.request_link = current_link;
          }
        }).always(function () {
          // this is the first callback to be called when the request finishs
          _this.unlockFetching();
        }).done(function (response, status_text, xhr) {
          var parsed_response = _this.parseResponse(response);

          _this.current_page++; //

          _this.setNextFetch(parsed_response);

          _this.event.trigger('fetch', [parsed_response.data, _this.current_page, xhr.request_link, parsed_response.next_link]);
        }).fail(function () {
          _this.event.trigger('error', ["problem loading from " + current_link]);
        }).always(function () {
          _this.event.trigger('afterFetch');
        });
      } else {
        _this.event.trigger('error', ["options 'data' or 'url' must be set"]);
      }
    }
  }, {
    key: "fetchNext",
    value: function fetchNext() {
      if (this.fetch_type == 'url') {
        this.fetchData();
      }
    }
  }]);

  return DataManager;
}();



/***/ }),

/***/ "./src/Module/EventManager.js":
/*!************************************!*\
  !*** ./src/Module/EventManager.js ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return EventManager; });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var EventManager = /*#__PURE__*/function () {
  function EventManager() {
    _classCallCheck(this, EventManager);

    // events store
    this.events_queue = {};
  } // Register an event


  _createClass(EventManager, [{
    key: "on",
    value: function on(event_name, closure) {
      if (!Array.isArray(this.events_queue[event_name])) {
        this.events_queue[event_name] = [];
      }

      this.events_queue[event_name].push(closure);
      return this;
    } // Fire an event

  }, {
    key: "trigger",
    value: function trigger(event_name, params) {
      var events = this.events_queue[event_name] || [];

      for (var i = 0; i < events.length; i++) {
        events[i].apply(this, params);
      }

      return this;
    }
  }, {
    key: "clearAll",
    value: function clearAll() {
      this.events_queue = {};
      return this;
    }
  }]);

  return EventManager;
}();



/***/ }),

/***/ "./src/Module/GalleryModal.js":
/*!************************************!*\
  !*** ./src/Module/GalleryModal.js ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return GalleryModal; });
/* harmony import */ var _EventManager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EventManager */ "./src/Module/EventManager.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }



var GalleryModal = /*#__PURE__*/function () {
  function GalleryModal(options) {
    _classCallCheck(this, GalleryModal);

    this.options = $.extend({
      // load more data on modal scroll
      loadOnScroll: false,
      // modal max height
      maxHeight: 500,
      // modal title
      title: 'summernote image gallery',
      // close button text
      close_text: 'Close',
      // save button text
      ok_text: 'Add',
      // select all button text
      selectAll_text: 'Select all',
      // deselect all button text
      deselectAll_text: 'Deselect all',
      // message error to display when no image is selected
      noImageSelected_msg: 'One image at least must be selected.'
    }, options);
    this.event = new _EventManager__WEBPACK_IMPORTED_MODULE_0__["default"]();
    this.template = this.getModalTemplate();
    this.$modal = $(this.template).hide(); // class to add to image when selected

    this.select_class = "selected-img";
    this.addStyleToDom();
    this.setOptions();
    this.attachEvents();
  }

  _createClass(GalleryModal, [{
    key: "setOptions",
    value: function setOptions() {
      this.$modal.find('.modal-body').css('max-height', this.options.maxHeight);
      this.$modal.find('.modal-title').html(this.options.title);
      this.$modal.find('#close').html(this.options.close_text);
      this.$modal.find('#save').html(this.options.ok_text);
      this.$modal.find('#select-all').html(this.options.selectAll_text);
      this.$modal.find('#deselect-all').html(this.options.deselectAll_text);
    } // append images to the modal with data object

  }, {
    key: "addImages",
    value: function addImages(data, page) {
      var $page_images = this.createImages(data, page);
      var $images_list = this.$modal.find('.images-list');

      if ($images_list.find('.img-item').length) {
        this.$modal.find('.images-list').append($page_images);
      } else {
        this.$modal.find('.images-list').html($page_images);
      }
    } // generate image elements from data object

  }, {
    key: "createImages",
    value: function createImages(data, page) {
      var _this = this;

      var content = [];

      for (var i = 0; i < data.length; i++) {
        var $image = $('<img class="img-thumbnail sng-image" title="' + data[i].title + '" data-page="' + page + '"/>');

        $image.get(0).onload = function () {
          $(this).siblings('.loading').hide();
          $(this).click(function (event) {
            $(this).toggleClass(_this.select_class);
          });
        };

        $image.attr('src', data[i].src);
        var $item = $('<div class="col-md-2 mb-4 img-item">' + '<i class="fa fa-check"></i>' + '<span class="loading">' + '<i class="fa fa-spinner fa-pulse fa-3x fa-fw"></i>' + '</span>' + '</div>');
        $item.prepend($image);
        content.push($item);
      }

      return content;
    }
  }, {
    key: "showError",
    value: function showError(message_text, permanent) {
      var $message = this.$modal.find('.message');
      $message.html('<span class="alert alert-danger">' + message_text + '</span>');

      if (!permanent) {
        setTimeout(function () {
          $message.html('');
        }, 5000);
      }
    }
  }, {
    key: "showLoading",
    value: function showLoading() {
      this.$modal.find('.modal-footer .loading').show();
    }
  }, {
    key: "hideLoading",
    value: function hideLoading() {
      this.$modal.find('.modal-footer .loading').hide();
    }
  }, {
    key: "attachEvents",
    value: function attachEvents() {
      var _this = this;

      var $modal = this.$modal;
      var $modal_body = $modal.find('.modal-body');
      $modal.find("button#save").click(function (event) {
        var $selected_img = $modal.find('.img-item img.' + _this.select_class);

        if (!$selected_img.length) {
          _this.showError(_this.options.noImageSelected_msg);

          return;
        }

        $modal.modal('hide');

        _this.event.trigger('beforeSave', [_this]);

        $selected_img.each(function (index, el) {
          _this.event.trigger('save', [_this, $(this)]);

          $(this).removeClass(_this.select_class);
        });

        _this.event.trigger('afterSave', [this]);
      });
      $modal.on('hidden.bs.modal', function () {
        _this.event.trigger('close');
      });
      $modal.find("button#select-all").click(function (event) {
        $modal.find('img').addClass(_this.select_class);
      });
      $modal.find("button#deselect-all").click(function (event) {
        $modal.find('img').removeClass(_this.select_class);
      });
      $modal_body.scroll(function () {
        var $images_list = $modal.find('.images-list');
        var is_near_bottom = $modal_body.scrollTop() + $modal_body.height() >= $images_list.height() - 100;

        if (is_near_bottom) {
          _this.event.trigger('scrollBottom', [_this]);
        }
      });
    }
  }, {
    key: "open",
    value: function open() {
      this.$modal.modal();
    }
  }, {
    key: "clearContent",
    value: function clearContent() {
      // Reset the initial html
      this.$modal.find('.images-list').html('');
    } // whether the images' container has enough content to show the vertical scroll

  }, {
    key: "imagesContainerHasScroll",
    value: function imagesContainerHasScroll() {
      var $images_container = this.$modal.find('.modal-body');
      var $images_list = $images_container.find('.images-list');
      return parseInt($images_list.height()) > parseInt($images_container.height());
    }
  }, {
    key: "getModalTemplate",
    value: function getModalTemplate() {
      var bootsrap_version = parseInt($.fn.modal.Constructor.VERSION);
      var header_content = ['<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>', '<h4 class="modal-title">[gallery title]</h4>'];
      var modal_html = '' + '<div class="modal summernote-gallery fade" tabindex="-1" role="dialog">' + '<div class="modal-lg modal-dialog ">' + '<div class="modal-content">' + '<div class="modal-header">' + (bootsrap_version == 3 ? header_content.join('') : header_content.reverse().join('')) + '</div>' + '<div class="modal-body">' + '<div class="row images-list">' + '</div>' + '</div>' + '<div class="modal-footer">' + '<span style="display: none;position: absolute;left: 10px;bottom: 10px;" class="loading" >' + '<i class="fa fa-spinner fa-pulse fa-3x fa-fw"></i>' + '</span >' + '<span style="display: inline-block; margin-right: 50px;">' + '<button type="button" id="deselect-all" class="btn btn-default">[Deselect-all]</button>' + '<button type="button" id="select-all" class="btn btn-default">[select-all]</button>' + '</span >' + '<button type="button" id="close" class="btn btn-default" data-dismiss="modal">[Close]</button>' + '<button type="button" id="save" class="btn btn-primary">[Add]</button>' + '<span class="message" ></span >' + '</div>' + '</div>' + '</div>' + '</div>';
      return modal_html;
    }
  }, {
    key: "addStyleToDom",
    value: function addStyleToDom() {
      this.$css = $('<style>' + '.img-item{' + 'position : relative;' + '}' + '.img-item .fa-check{' + 'position : absolute;' + 'top : -10px;' + 'right : 5px;' + 'font-size: 30px;' + 'color: #337AB7;' + '}' + '.img-item .sng-image{'
      /*+'min-height : 119.66px;'*/
      + '}' + '.img-item .loading{' + 'position: absolute;' + 'margin: auto;' + 'top: -20px;' + 'bottom: 0;' + 'display: block;' + 'left: 0;' + 'right: 0;' + 'width: 60px;' + 'height: 42px;' + 'text-align: center;' + '}' + '.modal.summernote-gallery .message{' + 'display: block;' + 'padding: 30px 0 20px 0;' + '}' + '.modal.summernote-gallery .message:empty{' + 'display: block;' + 'padding: 0px!important;' + '}' + '.modal.summernote-gallery .modal-body{' + 'overflow: scroll;' + '}' + '.img-item .fa-check{' + 'display : none;' + '}' + '.img-item .' + this.select_class + ' + .fa-check{' + 'display : block;' + '}' + '.' + this.select_class + '{' + 'background-color: #5CB85C;' + '}' + '</style>');
      this.$css.appendTo('body');
    }
  }]);

  return GalleryModal;
}();



/***/ }),

/***/ "./src/Module/SummernoteGallery.js":
/*!*****************************************!*\
  !*** ./src/Module/SummernoteGallery.js ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return SummernoteGallery; });
/* harmony import */ var _GalleryModal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GalleryModal */ "./src/Module/GalleryModal.js");
/* harmony import */ var _DataManager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./DataManager */ "./src/Module/DataManager.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }




var SummernoteGallery = /*#__PURE__*/function () {
  function SummernoteGallery(options) {
    _classCallCheck(this, SummernoteGallery);

    this.options = $.extend({
      name: 'summernoteGallery',
      buttonLabel: '<i class="fa fa-file-image-o"></i> SN Gallery',
      tooltip: 'summernote gallery'
    }, options);
    this.plugin_default_options = {};
  } // set the focus to the last focused element in the editor


  _createClass(SummernoteGallery, [{
    key: "recoverEditorFocus",
    value: function recoverEditorFocus() {
      var last_focused_el = $(this.editor).data('last_focused_element');

      if (typeof last_focused_el !== "undefined") {
        var editor = this.editable;
        var range = document.createRange();
        var sel = window.getSelection();
        var cursor_position = last_focused_el.length;
        range.setStart(last_focused_el, cursor_position);
        range.collapse(true);
        sel.removeAllRanges();
        sel.addRange(range);
        editor.focus();
      }
    }
  }, {
    key: "saveLastFocusedElement",
    value: function saveLastFocusedElement() {
      var focused_element = window.getSelection().focusNode;
      var parent = $(this.editable).get(0);

      if ($.contains(parent, focused_element)) {
        $(this.editor).data('last_focused_element', focused_element);
      }
    }
  }, {
    key: "attachEditorEvents",
    value: function attachEditorEvents() {
      var _this = this;

      $(this.editable).on('keypress, mousemove', function () {
        _this.saveLastFocusedElement();
      });
    }
  }, {
    key: "initGallery",
    value: function initGallery(context) {
      this.context = context;
      this.editor = this.context.layoutInfo.note;
      this.editable = this.context.layoutInfo.editable;
      this.plugin_options = $.extend(this.plugin_default_options, this.context.options[this.options.name] || {});
      this.modal = new _GalleryModal__WEBPACK_IMPORTED_MODULE_0__["default"](this.plugin_options.modal);
      this.data_manager = new _DataManager__WEBPACK_IMPORTED_MODULE_1__["default"](this.plugin_options.source);
      this.attachModalEvents();
      this.attachEditorEvents();
    }
  }, {
    key: "attachModalEvents",
    value: function attachModalEvents() {
      var _this = this;

      this.modal.event.on('beforeSave', function (gallery_modal) {
        _this.recoverEditorFocus();
      });
      this.modal.event.on('save', function (gallery_modal, $image) {
        // add selected images to summernote editor
        _this.context.invoke('editor.pasteHTML', '<img src="' + $image.attr('src') + '" alt="' + ($image.attr('alt') || "") + '" />');
      });
      this.modal.event.on('scrollBottom', function (gallery_modal) {
        if (_this.modal.options.loadOnScroll) {
          _this.data_manager.fetchNext();
        }
      });
      this.modal.event.on('close', function (gallery_modal) {
        _this.data_manager.init();

        _this.modal.clearContent();
      });
    }
  }, {
    key: "createButton",
    value: function createButton() {
      var _this = this;

      var button = $.summernote.ui.button({
        className: 'w-100',
        contents: this.options.buttonLabel,
        tooltip: this.options.tooltip,
        click: function click() {
          _this.openGallery();
        }
      }); // create jQuery object from button instance.

      return button.render();
    }
  }, {
    key: "attachDataEvents",
    value: function attachDataEvents() {
      var _this = this;

      this.data_manager.event.on('beforeFetch', function () {
        _this.modal.showLoading();
      }).on('fetch', function (data, page, link) {
        _this.modal.addImages(data, page);

        setTimeout(function () {
          if (_this.modal.options.loadOnScroll && !_this.modal.imagesContainerHasScroll()) {
            // The loadOnScroll won't work if the images' container doesn't have the scroll displayed,
            // so we need to keep loading the images until the scroll shows.
            _this.data_manager.fetchNext();
          }
        }, 2000);
      }).on('afterFetch', function () {
        _this.modal.hideLoading();
      }).on('error', function (error) {
        _this.modal.showError(error, true);
      });
    }
  }, {
    key: "openGallery",
    value: function openGallery() {
      this.attachDataEvents();
      this.data_manager.fetchData();
      this.modal.open();
    }
  }]);

  return SummernoteGallery;
}();



/***/ }),

/***/ "./src/Module/index.js":
/*!*****************************!*\
  !*** ./src/Module/index.js ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return GalleryPlugin; });
/* harmony import */ var _SummernoteGallery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./SummernoteGallery */ "./src/Module/SummernoteGallery.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }



var GalleryPlugin = /*#__PURE__*/function () {
  function GalleryPlugin(options) {
    _classCallCheck(this, GalleryPlugin);

    this.summernote_gallery = new _SummernoteGallery__WEBPACK_IMPORTED_MODULE_0__["default"](options);
  }

  _createClass(GalleryPlugin, [{
    key: "getPlugin",
    value: function getPlugin() {
      var plugin = {};

      var _this = this;

      var options = this.summernote_gallery.options;

      plugin[options.name] = function (context) {
        var sgOptions = context.options[options.name] || {};
        var buttonLabel = sgOptions.buttonLabel || _this.summernote_gallery.options.buttonLabel;
        _this.summernote_gallery.options.buttonLabel = buttonLabel; // add gallery button

        context.memo('button.' + options.name, _this.createButton());
        this.events = {
          'summernote.keyup': function summernoteKeyup(we, e) {
            _this.summernote_gallery.saveLastFocusedElement();
          }
        };

        this.initialize = function () {
          _this.summernote_gallery.initGallery(context);
        };
      };

      return plugin;
    }
  }, {
    key: "createButton",
    value: function createButton() {
      return this.summernote_gallery.createButton();
    }
  }]);

  return GalleryPlugin;
}();



/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Module */ "./src/Module/index.js");

var gallery_plugin = new _Module__WEBPACK_IMPORTED_MODULE_0__["default"](); // add the plugin to summernote

$.extend($.summernote.plugins, gallery_plugin.getPlugin());

/***/ })

/******/ });
//# sourceMappingURL=summernote-gallery.min.js.map